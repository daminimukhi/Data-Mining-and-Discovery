# -*- coding: utf-8 -*-
"""(23040216).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15m_l0_dtSCl08zPnlufFPFLS_bUyG2Za
"""

import sqlite3
import random
import string
import csv
from faker import Faker
from google.colab import files  # For downloading files in Google Colab
import os

# Initialize faker for generating random data
faker = Faker()

# Define the database path
db_path = 'online_bookstore.db'  # Saves database in the current directory

# Connect to SQLite database (create it if it doesn't exist)
conn = sqlite3.connect(db_path)
cursor = conn.cursor()

# Create tables if they do not exist
cursor.execute('''
CREATE TABLE IF NOT EXISTS Authors (
    author_id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    birth_year INTEGER NOT NULL
);
''')

cursor.execute('''
CREATE TABLE IF NOT EXISTS Books (
    book_id INTEGER PRIMARY KEY AUTOINCREMENT,
    title TEXT NOT NULL,
    genre TEXT NOT NULL,
    publication_year INTEGER NOT NULL,
    price REAL NOT NULL,
    rating INTEGER NOT NULL,
    author_id INTEGER NOT NULL,
    FOREIGN KEY (author_id) REFERENCES Authors(author_id)
);
''')

cursor.execute('''
CREATE TABLE IF NOT EXISTS Customers (
    customer_id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    email TEXT,
    age INTEGER NOT NULL
);
''')

cursor.execute('''
CREATE TABLE IF NOT EXISTS Orders (
    order_id INTEGER PRIMARY KEY AUTOINCREMENT,
    customer_id INTEGER NOT NULL,
    book_id INTEGER NOT NULL,
    quantity INTEGER NOT NULL,
    order_date TEXT NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),
    FOREIGN KEY (book_id) REFERENCES Books(book_id)
);
''')

# Generate authors (10,000 records)
authors = [(faker.name(), random.randint(1940, 1995)) for _ in range(10000)]
cursor.executemany('INSERT INTO Authors (name, birth_year) VALUES (?, ?)', authors)

# Generate books (10,000 records)
genres = ['Fiction', 'Non-Fiction', 'Fantasy', 'Sci-Fi', 'Biography', 'Mystery', 'Romance']
books = [
    (
        f"Book Title {i}",
        random.choice(genres),
        random.randint(1980, 2023),
        round(random.uniform(5, 100), 2),
        random.randint(1, 5),
        random.randint(1, 10000)
    )
    for i in range(10000)
]
cursor.executemany('''
INSERT INTO Books (title, genre, publication_year, price, rating, author_id)
VALUES (?, ?, ?, ?, ?, ?)
''', books)

# Generate customers with missing and duplicate data (10,000 records)
customers_with_missing_data = [
    (
        faker.name(),
        faker.email() if random.random() >= 0.1 else None,  # 10% missing emails
        random.randint(18, 80)
    )
    for _ in range(9000)
]

# Generate duplicate customers
duplicate_customers = [
    (
        faker.name(),
        faker.email(),
        random.randint(18, 80)
    )
    for _ in range(1000)
]

customers = customers_with_missing_data + duplicate_customers
cursor.executemany('INSERT INTO Customers (name, email, age) VALUES (?, ?, ?)', customers)

# Generate orders (10,000 records)
orders = [
    (
        random.randint(1, 10000),  # customer_id
        random.randint(1, 10000),  # book_id
        random.randint(1, 5),      # quantity
        faker.date_this_year().isoformat()
    )
    for _ in range(10000)
]
cursor.executemany('''
INSERT INTO Orders (customer_id, book_id, quantity, order_date)
VALUES (?, ?, ?, ?)
''', orders)

# Commit the changes
conn.commit()

# Function to export data from a table to a CSV file
def export_table_to_csv(table_name, filename, headers):
    cursor.execute(f"SELECT * FROM {table_name}")
    rows = cursor.fetchall()

    # Writing to CSV file
    with open(filename, 'w', newline='') as f:
        writer = csv.writer(f)
        writer.writerow(headers)  # Write headers
        writer.writerows(rows)    # Write rows

    print(f"CSV file for {table_name} has been created: {filename}")
    return filename

# Export tables to CSV files
authors_file = export_table_to_csv('Authors', 'authors.csv', ['author_id', 'name', 'birth_year'])
books_file = export_table_to_csv('Books', 'books.csv', ['book_id', 'title', 'genre', 'publication_year', 'price', 'rating', 'author_id'])
customers_file = export_table_to_csv('Customers', 'customers.csv', ['customer_id', 'name', 'email', 'age'])
orders_file = export_table_to_csv('Orders', 'orders.csv', ['order_id', 'customer_id', 'book_id', 'quantity', 'order_date'])

# Close connection
conn.close()

# Download the CSV files to your local system (if using Colab)
files.download(authors_file)
files.download(books_file)
files.download(customers_file)
files.download(orders_file)

# Print the names of the generated CSV files
print(f"CSV files generated and ready for download: {authors_file}, {books_file}, {customers_file}, {orders_file}")